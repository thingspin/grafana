{"version":3,"sources":["../src/trackmap_ctrl.js"],"names":["log","msg","L","moment","appEvents","MetricsPanelCtrl","panelDefaults","maxDataPoints","autoZoom","scrollWheelZoom","lineColor","pointColor","TrackMapCtrl","$scope","$injector","_","defaults","panel","timeSrv","get","coords","leafMap","polyline","hoverMarker","hoverTarget","setSizePromise","markerIcon","Icon","extend","options","iconSize","icon","iconUrl","events","on","onInitialized","bind","onViewModeChanged","onInitEditMode","onPanelTeardown","onPanelSizeChanged","onDataReceived","onDataSnapshotLoad","onPanelHover","onPanelClear","render","addEditorTab","$timeout","cancel","evt","length","target","Math","floor","pos","x","addTo","min","max","idx","exact","timestamp","setLatLng","position","removeFrom","map","invalidateSize","enabled","disable","enable","id","zoomSnap","zoomDelta","control","layers","tileLayer","maxZoom","forcedOverlay","subdomains","circleMarker","latLng","color","fillColor","fillOpacity","weight","radius","mapBaseLayerChange","mapZoomToBox","e","overlay","layer","setZIndex","zIndex","bounds","reduce","t","c","boxZoomBounds","contains","from","to","Infinity","isFinite","setTime","utc","marker","bindPopup","zoomToFit","fitBounds","getBounds","setStyle","data","setupMap","setView","lats","datapoints","lons","i","push","addDataToMap","snapshotData","templateUrl"],"mappings":"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","sourcesContent":["import L from './leaflet/leaflet.js';\r\nimport moment from 'moment';\r\n\r\nimport appEvents from 'app/core/app_events';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\n\r\nimport './leaflet/leaflet.css!';\r\nimport './partials/module.css!';\r\n\r\nconst panelDefaults = {\r\n  maxDataPoints: 500,\r\n  autoZoom: true,\r\n  scrollWheelZoom: false,\r\n  lineColor: 'red',\r\n  pointColor: 'royalblue',\r\n}\r\n\r\nfunction log(msg) {\r\n}\r\n\r\nexport class TrackMapCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    this.timeSrv = $injector.get('timeSrv');\r\n    this.coords = [];\r\n    this.leafMap = null;\r\n    this.polyline = null;\r\n    this.hoverMarker = null;\r\n    this.hoverTarget = null;\r\n    this.setSizePromise = null;\r\n\r\n    let markerIcon = L.Icon.extend({\r\n      options: {\r\n          iconSize:     [32, 32],\r\n      }\r\n    });\r\n\r\n    L.icon = function (options) {\r\n      return new L.Icon(options);\r\n    };\r\n\r\n    this.icon = new markerIcon({iconUrl: 'public/plugins/thingspin-trackmap-panel/img/marker.png'}),\r\n\r\n    // Panel events\r\n    this.events.on('panel-initialized', this.onInitialized.bind(this));\r\n    this.events.on('view-mode-changed', this.onViewModeChanged.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n    this.events.on('panel-size-changed', this.onPanelSizeChanged.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\r\n\r\n    // Global events\r\n    appEvents.on('graph-hover', this.onPanelHover.bind(this));\r\n    appEvents.on('graph-hover-clear', this.onPanelClear.bind(this));\r\n  }\r\n\r\n  onInitialized(){\r\n    this.render();\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/thingspin-trackmap-panel/partials/options.html', 2);\r\n  }\r\n\r\n  onPanelTeardown() {\r\n    this.$timeout.cancel(this.setSizePromise);\r\n  }\r\n\r\n  onPanelHover(evt) {\r\n    if (this.coords.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // check if we are already showing the correct hoverMarker\r\n    let target = Math.floor(evt.pos.x);\r\n    if (this.hoverTarget && this.hoverTarget === target) {\r\n      return;\r\n    }\r\n\r\n    // check for initial show of the marker\r\n    if (this.hoverTarget == null){\r\n      this.hoverMarker.addTo(this.leafMap);\r\n    }\r\n\r\n    this.hoverTarget = target;\r\n\r\n    // Find the currently selected time and move the hoverMarker to it\r\n    // Note that an exact match isn't always going to work due to rounding so\r\n    // we clean that up later (still more efficient)\r\n    let min = 0;\r\n    let max = this.coords.length - 1;\r\n    let idx = null;\r\n    let exact = false;\r\n    while (min <= max) {\r\n      idx = Math.floor((max + min) / 2);\r\n      if (this.coords[idx].timestamp === this.hoverTarget) {\r\n        exact = true;\r\n        break;\r\n      }\r\n      else if (this.coords[idx].timestamp < this.hoverTarget) {\r\n        min = idx + 1;\r\n      }\r\n      else {\r\n        max = idx - 1;\r\n      }\r\n    }\r\n\r\n    // Correct the case where we are +1 index off\r\n    if (!exact && idx > 0 && this.coords[idx].timestamp > this.hoverTarget) {\r\n      idx--;\r\n    }\r\n    this.hoverMarker.setLatLng(this.coords[idx].position);\r\n  }\r\n\r\n  onPanelClear(evt) {\r\n    log(\"onPanelClear\");\r\n    // clear the highlighted circle\r\n    this.hoverTarget = null;\r\n    if (this.hoverMarker) {\r\n      this.hoverMarker.removeFrom(this.leafMap);\r\n    }\r\n  }\r\n\r\n  onViewModeChanged(){\r\n    log(\"onViewModeChanged\");\r\n    // KLUDGE: When the view mode is changed, panel resize events are not\r\n    //         emitted even if the panel was resized. Work around this by telling\r\n    //         the panel it's been resized whenever the view mode changes.\r\n    this.onPanelSizeChanged();\r\n  }\r\n\r\n  onPanelSizeChanged() {\r\n    log(\"onPanelSizeChanged\");\r\n    // KLUDGE: This event is fired too soon - we need to delay doing the actual\r\n    //         size invalidation until after the panel has actually been resized.\r\n    this.$timeout.cancel(this.setSizePromise);\r\n    let map = this.leafMap;\r\n    this.setSizePromise = this.$timeout(function(){\r\n      if (map) {\r\n        log(\"Invalidating map size\");\r\n        map.invalidateSize(true);\r\n      }}, 500\r\n    );\r\n  }\r\n\r\n  applyScrollZoom() {\r\n    let enabled = this.leafMap.scrollWheelZoom.enabled();\r\n    if (enabled != this.panel.scrollWheelZoom){\r\n      if (enabled){\r\n        this.leafMap.scrollWheelZoom.disable();\r\n      }\r\n      else{\r\n        this.leafMap.scrollWheelZoom.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  setupMap() {\r\n    log(\"setupMap\");\r\n    // Create the map or get it back in a clean state if it already exists\r\n    if (this.leafMap) {\r\n      if (this.polyline) {\r\n        this.polyline.removeFrom(this.leafMap);\r\n      }\r\n      this.onPanelClear();\r\n      return;\r\n    }\r\n\r\n    // Create the map\r\n    this.leafMap = L.map('trackmap-' + this.panel.id, {\r\n      scrollWheelZoom: this.panel.scrollWheelZoom,\r\n      zoomSnap: 0.5,\r\n      zoomDelta: 1,\r\n    });\r\n\r\n    // Define layers and add them to the control widget\r\n    L.control.layers({\r\n      'OpenStreetMap': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        //attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n        maxZoom: 15\r\n      }).addTo(this.leafMap), // Add default layer to map\r\n      // 'OpenTopoMap': L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\r\n      //   attribution: 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\r\n      //   maxZoom: 17\r\n      // }),\r\n      'Satellite': L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n        //attribution: 'Imagery &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n        // This map doesn't have labels so we force a label-only layer on top of it\r\n        forcedOverlay: L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}.png', {\r\n          //attribution: 'Labels by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n          subdomains: 'abcd',\r\n          maxZoom: 20,\r\n        })\r\n      })\r\n    }).addTo(this.leafMap);\r\n\r\n    // Hover marker\r\n    this.hoverMarker = L.circleMarker(L.latLng(0, 0), {\r\n      color: 'white',\r\n      fillColor: this.panel.pointColor,\r\n      fillOpacity: 1,\r\n      weight: 3,\r\n      radius: 14\r\n    });\r\n\r\n    // Events\r\n    this.leafMap.on('baselayerchange', this.mapBaseLayerChange.bind(this));\r\n    this.leafMap.on('boxzoomend', this.mapZoomToBox.bind(this));\r\n  }\r\n\r\n  mapBaseLayerChange(e) {\r\n    // If a tileLayer has a 'forcedOverlay' attribute, always enable/disable it\r\n    // along with the layer\r\n    if (this.leafMap.forcedOverlay) {\r\n      this.leafMap.forcedOverlay.removeFrom(this.leafMap);\r\n      this.leafMap.forcedOverlay = null;\r\n    }\r\n    let overlay = e.layer.options.forcedOverlay;\r\n    if (overlay) {\r\n      overlay.addTo(this.leafMap);\r\n      overlay.setZIndex(e.layer.options.zIndex + 1);\r\n      this.leafMap.forcedOverlay = overlay;\r\n    }\r\n  }\r\n\r\n  mapZoomToBox(e) {\r\n    log(\"mapZoomToBox\");\r\n    // Find time bounds of selected coordinates\r\n    const bounds = this.coords.reduce(\r\n      function(t, c) {\r\n        if (e.boxZoomBounds.contains(c.position)) {\r\n          t.from = Math.min(t.from, c.timestamp);\r\n          t.to = Math.max(t.to, c.timestamp);\r\n        }\r\n        return t;\r\n      },\r\n      {from: Infinity, to: -Infinity}\r\n    );\r\n\r\n    // Set the global time range\r\n    if (isFinite(bounds.from) && isFinite(bounds.to)) {\r\n      // KLUDGE: Create moment objects here to avoid a TypeError that\r\n      //         occurs when Grafana processes normal numbers\r\n      this.timeSrv.setTime({\r\n        from: moment.utc(bounds.from),\r\n        to: moment.utc(bounds.to)\r\n      });\r\n    }\r\n  }\r\n\r\n  // Add the circles and polyline to the map\r\n  addDataToMap() {\r\n    this.coords.map(x => {\r\n      L.marker(x.position, {icon: this.icon}).addTo(this.leafMap).bindPopup(\"Here!\");\r\n    }, this), \r\n\r\n    this.polyline = L.polyline(\r\n      this.coords.map(x => x.position, this), {\r\n        color: this.panel.lineColor,\r\n        weight: 3,\r\n      }\r\n    ).addTo(this.leafMap);\r\n\r\n    this.zoomToFit();\r\n  }\r\n\r\n  zoomToFit(){\r\n    log(\"zoomToFit\");\r\n    if (this.panel.autoZoom && this.polyline){\r\n      this.leafMap.fitBounds(this.polyline.getBounds());\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  refreshColors() {\r\n    log(\"refreshColors\");\r\n    if (this.polyline) {\r\n      this.polyline.setStyle({\r\n        color: this.panel.lineColor\r\n      });\r\n    }\r\n    if (this.hoverMarker){\r\n      this.hoverMarker.setStyle({\r\n        fillColor: this.panel.pointColor,\r\n      });\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    log(\"onDataReceived\");\r\n    this.setupMap();\r\n\r\n    if (data.length === 0 || data.length !== 2) {\r\n      // No data or incorrect data, show a world map and abort\r\n      this.leafMap.setView([0, 0], 1);\r\n      return;\r\n    }\r\n\r\n    // Asumption is that there are an equal number of properly matched timestamps\r\n    // TODO: proper joining by timestamp?\r\n    this.coords.length = 0;\r\n    const lats = data[0].datapoints;\r\n    const lons = data[1].datapoints;\r\n    for (let i = 0; i < lats.length; i++) {\r\n      if (lats[i][0] == null || lons[i][0] == null ||\r\n          lats[i][1] !== lats[i][1]) {\r\n        continue;\r\n      }\r\n\r\n      this.coords.push({\r\n        position: L.latLng(lats[i][0], lons[i][0]),\r\n        timestamp: lats[i][1]\r\n      });\r\n    }\r\n    this.addDataToMap();\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    log(\"onSnapshotLoad\");\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n}\r\n\r\nTrackMapCtrl.templateUrl = 'partials/module.html';\r\n"],"file":"trackmap_ctrl.js"}