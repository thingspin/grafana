{
    "id": "MQTT Flow Format",
    "label": "{{.Params.FlowId}}",
    "info": "",
    "nodes": [
        {{if .Enable}}
            {{.Params.AddTopicList | convJsonStr}},
        {{else}}
            {{.Params.AddDisTopicList | convJsonStr}},
        {{end}}
        {
            "id": "TS-MQTT-STATUS-{{.Params.FlowId}}",
            "type": "status",
            "name": "",
            "scope": ["TS-MQTT-CHECKNODE-{{.Params.FlowId}}"],
            "x": 200,
            "y": 60,
            "wires": [
                ["TS-MQTT-STATUS-DATA-PROCESS-{{.Params.FlowId}}"]
            ]
        }, {
            "id": "TS-MQTT-STATUS-DATA-PROCESS-{{.Params.FlowId}}",
            "type": "function",
            "name": "Data Process",
            "func": "const { status } = msg;\nconst stat = global.get('ts-status') || {};\nif(stat[status.source.name] !== status.fill) {\n    msg.payload = status.fill;\n}\nstat[status.source.name] = status.fill;\nglobal.set('ts-status', stat);\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 470,
            "y": 60,
            "wires": [
                ["TS-MQTT-MQTTOUT-{{.Params.FlowId}}"]
            ]
        }, {
            "id": "TS-MQTT-MQTTOUT-{{.Params.FlowId}}",
            "type": "mqtt out",
            "name": "",
            "topic": "/thingspin/connect/{{.Params.FlowId}}/status",
            "qos": "2",
            "retain": "true",
            "broker": "TS-MQTT-TSBROKER-{{.Params.FlowId}}",
            "x": 880,
            "y": 60,
            "wires": []
        }, {
            "id": "TS-MQTT-TSBROKER-{{.Params.FlowId}}",
            "type": "mqtt-broker",
            "broker": "localhost",
            "port": "1883",
            "clientid": "",
            "usetls": false,
            "compatmode": true,
            "keepalive": "60",
            "cleansession": true,
            "birthTopic": "",
            "birthQos": "0",
            "birthPayload": "",
            "closeTopic": "",
            "closeQos": "0",
            "closePayload": "",
            "willTopic": "",
            "willQos": "0",
            "willPayload": ""
        },
        {
            "id": "TS-MQTT-OUTPUT-{{.Params.FlowId}}",
            "type": "influxdb batch",
            "influxdb": "TS-MQTT-INFLUXD-{{.Params.FlowId}}",
            "precision": "",
            "retentionPolicy": "",
            "name": "",
            "x": 830,
            "y": 220,
            "wires": []
        },
        {
            "id": "TS-MQTT-CONNECT-{{.Params.FlowId}}",
            "type": "mqtt-broker",
            "name": "{{.Params.Host}}",
            "broker": "{{.Params.Host}}",
            "port": "{{.Params.Port}}",
            "clientid": "",
            "usetls": false,
            "compatmode": true,
            "keepalive": "{{.Params.KeepAlive}}",
            "cleansession": "{{.Params.Session}}",
            "birthTopic": "",
            "birthQos": "0",
            "birthPayload": "",
            "closeTopic": "",
            "closeQos": "0",
            "closePayload": "",
            "willTopic": "",
            "willQos": "0",
            "willPayload": ""
        },
        {
            "id": "TS-MQTT-INFLUXD-{{.Params.FlowId}}",
            "type": "influxdb",
            "z": "",
            "hostname": "127.0.0.1",
            "port": "8086",
            "protocol": "http",
            "database": "thingspin",
            "name": "",
            "usetls": false,
            "tls": ""
        }
    ]
}